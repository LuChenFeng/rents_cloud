package pers.lcf.rents.userbase.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserStyleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    public UserStyleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdIsNull() {
            addCriterion("user_info_id is null");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdIsNotNull() {
            addCriterion("user_info_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdEqualTo(String value) {
            addCriterion("user_info_id =", value, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdNotEqualTo(String value) {
            addCriterion("user_info_id <>", value, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdGreaterThan(String value) {
            addCriterion("user_info_id >", value, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdGreaterThanOrEqualTo(String value) {
            addCriterion("user_info_id >=", value, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdLessThan(String value) {
            addCriterion("user_info_id <", value, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdLessThanOrEqualTo(String value) {
            addCriterion("user_info_id <=", value, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdLike(String value) {
            addCriterion("user_info_id like", value, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdNotLike(String value) {
            addCriterion("user_info_id not like", value, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdIn(List<String> values) {
            addCriterion("user_info_id in", values, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdNotIn(List<String> values) {
            addCriterion("user_info_id not in", values, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdBetween(String value1, String value2) {
            addCriterion("user_info_id between", value1, value2, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andUserInfoIdNotBetween(String value1, String value2) {
            addCriterion("user_info_id not between", value1, value2, "userInfoId");
            return (Criteria) this;
        }

        public Criteria andCityIsNull() {
            addCriterion("city is null");
            return (Criteria) this;
        }

        public Criteria andCityIsNotNull() {
            addCriterion("city is not null");
            return (Criteria) this;
        }

        public Criteria andCityEqualTo(String value) {
            addCriterion("city =", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotEqualTo(String value) {
            addCriterion("city <>", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityGreaterThan(String value) {
            addCriterion("city >", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityGreaterThanOrEqualTo(String value) {
            addCriterion("city >=", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLessThan(String value) {
            addCriterion("city <", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLessThanOrEqualTo(String value) {
            addCriterion("city <=", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLike(String value) {
            addCriterion("city like", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotLike(String value) {
            addCriterion("city not like", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityIn(List<String> values) {
            addCriterion("city in", values, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotIn(List<String> values) {
            addCriterion("city not in", values, "city");
            return (Criteria) this;
        }

        public Criteria andCityBetween(String value1, String value2) {
            addCriterion("city between", value1, value2, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotBetween(String value1, String value2) {
            addCriterion("city not between", value1, value2, "city");
            return (Criteria) this;
        }

        public Criteria andThoughtIsNull() {
            addCriterion("thought is null");
            return (Criteria) this;
        }

        public Criteria andThoughtIsNotNull() {
            addCriterion("thought is not null");
            return (Criteria) this;
        }

        public Criteria andThoughtEqualTo(Integer value) {
            addCriterion("thought =", value, "thought");
            return (Criteria) this;
        }

        public Criteria andThoughtNotEqualTo(Integer value) {
            addCriterion("thought <>", value, "thought");
            return (Criteria) this;
        }

        public Criteria andThoughtGreaterThan(Integer value) {
            addCriterion("thought >", value, "thought");
            return (Criteria) this;
        }

        public Criteria andThoughtGreaterThanOrEqualTo(Integer value) {
            addCriterion("thought >=", value, "thought");
            return (Criteria) this;
        }

        public Criteria andThoughtLessThan(Integer value) {
            addCriterion("thought <", value, "thought");
            return (Criteria) this;
        }

        public Criteria andThoughtLessThanOrEqualTo(Integer value) {
            addCriterion("thought <=", value, "thought");
            return (Criteria) this;
        }

        public Criteria andThoughtIn(List<Integer> values) {
            addCriterion("thought in", values, "thought");
            return (Criteria) this;
        }

        public Criteria andThoughtNotIn(List<Integer> values) {
            addCriterion("thought not in", values, "thought");
            return (Criteria) this;
        }

        public Criteria andThoughtBetween(Integer value1, Integer value2) {
            addCriterion("thought between", value1, value2, "thought");
            return (Criteria) this;
        }

        public Criteria andThoughtNotBetween(Integer value1, Integer value2) {
            addCriterion("thought not between", value1, value2, "thought");
            return (Criteria) this;
        }

        public Criteria andSpendIsNull() {
            addCriterion("spend is null");
            return (Criteria) this;
        }

        public Criteria andSpendIsNotNull() {
            addCriterion("spend is not null");
            return (Criteria) this;
        }

        public Criteria andSpendEqualTo(Integer value) {
            addCriterion("spend =", value, "spend");
            return (Criteria) this;
        }

        public Criteria andSpendNotEqualTo(Integer value) {
            addCriterion("spend <>", value, "spend");
            return (Criteria) this;
        }

        public Criteria andSpendGreaterThan(Integer value) {
            addCriterion("spend >", value, "spend");
            return (Criteria) this;
        }

        public Criteria andSpendGreaterThanOrEqualTo(Integer value) {
            addCriterion("spend >=", value, "spend");
            return (Criteria) this;
        }

        public Criteria andSpendLessThan(Integer value) {
            addCriterion("spend <", value, "spend");
            return (Criteria) this;
        }

        public Criteria andSpendLessThanOrEqualTo(Integer value) {
            addCriterion("spend <=", value, "spend");
            return (Criteria) this;
        }

        public Criteria andSpendIn(List<Integer> values) {
            addCriterion("spend in", values, "spend");
            return (Criteria) this;
        }

        public Criteria andSpendNotIn(List<Integer> values) {
            addCriterion("spend not in", values, "spend");
            return (Criteria) this;
        }

        public Criteria andSpendBetween(Integer value1, Integer value2) {
            addCriterion("spend between", value1, value2, "spend");
            return (Criteria) this;
        }

        public Criteria andSpendNotBetween(Integer value1, Integer value2) {
            addCriterion("spend not between", value1, value2, "spend");
            return (Criteria) this;
        }

        public Criteria andNatureIsNull() {
            addCriterion("nature is null");
            return (Criteria) this;
        }

        public Criteria andNatureIsNotNull() {
            addCriterion("nature is not null");
            return (Criteria) this;
        }

        public Criteria andNatureEqualTo(Integer value) {
            addCriterion("nature =", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureNotEqualTo(Integer value) {
            addCriterion("nature <>", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureGreaterThan(Integer value) {
            addCriterion("nature >", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureGreaterThanOrEqualTo(Integer value) {
            addCriterion("nature >=", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureLessThan(Integer value) {
            addCriterion("nature <", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureLessThanOrEqualTo(Integer value) {
            addCriterion("nature <=", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureIn(List<Integer> values) {
            addCriterion("nature in", values, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureNotIn(List<Integer> values) {
            addCriterion("nature not in", values, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureBetween(Integer value1, Integer value2) {
            addCriterion("nature between", value1, value2, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureNotBetween(Integer value1, Integer value2) {
            addCriterion("nature not between", value1, value2, "nature");
            return (Criteria) this;
        }

        public Criteria andDisciplineIsNull() {
            addCriterion("discipline is null");
            return (Criteria) this;
        }

        public Criteria andDisciplineIsNotNull() {
            addCriterion("discipline is not null");
            return (Criteria) this;
        }

        public Criteria andDisciplineEqualTo(Integer value) {
            addCriterion("discipline =", value, "discipline");
            return (Criteria) this;
        }

        public Criteria andDisciplineNotEqualTo(Integer value) {
            addCriterion("discipline <>", value, "discipline");
            return (Criteria) this;
        }

        public Criteria andDisciplineGreaterThan(Integer value) {
            addCriterion("discipline >", value, "discipline");
            return (Criteria) this;
        }

        public Criteria andDisciplineGreaterThanOrEqualTo(Integer value) {
            addCriterion("discipline >=", value, "discipline");
            return (Criteria) this;
        }

        public Criteria andDisciplineLessThan(Integer value) {
            addCriterion("discipline <", value, "discipline");
            return (Criteria) this;
        }

        public Criteria andDisciplineLessThanOrEqualTo(Integer value) {
            addCriterion("discipline <=", value, "discipline");
            return (Criteria) this;
        }

        public Criteria andDisciplineIn(List<Integer> values) {
            addCriterion("discipline in", values, "discipline");
            return (Criteria) this;
        }

        public Criteria andDisciplineNotIn(List<Integer> values) {
            addCriterion("discipline not in", values, "discipline");
            return (Criteria) this;
        }

        public Criteria andDisciplineBetween(Integer value1, Integer value2) {
            addCriterion("discipline between", value1, value2, "discipline");
            return (Criteria) this;
        }

        public Criteria andDisciplineNotBetween(Integer value1, Integer value2) {
            addCriterion("discipline not between", value1, value2, "discipline");
            return (Criteria) this;
        }

        public Criteria andThinkingIsNull() {
            addCriterion("thinking is null");
            return (Criteria) this;
        }

        public Criteria andThinkingIsNotNull() {
            addCriterion("thinking is not null");
            return (Criteria) this;
        }

        public Criteria andThinkingEqualTo(Integer value) {
            addCriterion("thinking =", value, "thinking");
            return (Criteria) this;
        }

        public Criteria andThinkingNotEqualTo(Integer value) {
            addCriterion("thinking <>", value, "thinking");
            return (Criteria) this;
        }

        public Criteria andThinkingGreaterThan(Integer value) {
            addCriterion("thinking >", value, "thinking");
            return (Criteria) this;
        }

        public Criteria andThinkingGreaterThanOrEqualTo(Integer value) {
            addCriterion("thinking >=", value, "thinking");
            return (Criteria) this;
        }

        public Criteria andThinkingLessThan(Integer value) {
            addCriterion("thinking <", value, "thinking");
            return (Criteria) this;
        }

        public Criteria andThinkingLessThanOrEqualTo(Integer value) {
            addCriterion("thinking <=", value, "thinking");
            return (Criteria) this;
        }

        public Criteria andThinkingIn(List<Integer> values) {
            addCriterion("thinking in", values, "thinking");
            return (Criteria) this;
        }

        public Criteria andThinkingNotIn(List<Integer> values) {
            addCriterion("thinking not in", values, "thinking");
            return (Criteria) this;
        }

        public Criteria andThinkingBetween(Integer value1, Integer value2) {
            addCriterion("thinking between", value1, value2, "thinking");
            return (Criteria) this;
        }

        public Criteria andThinkingNotBetween(Integer value1, Integer value2) {
            addCriterion("thinking not between", value1, value2, "thinking");
            return (Criteria) this;
        }

        public Criteria andStyleSumIsNull() {
            addCriterion("style_sum is null");
            return (Criteria) this;
        }

        public Criteria andStyleSumIsNotNull() {
            addCriterion("style_sum is not null");
            return (Criteria) this;
        }

        public Criteria andStyleSumEqualTo(Integer value) {
            addCriterion("style_sum =", value, "styleSum");
            return (Criteria) this;
        }

        public Criteria andStyleSumNotEqualTo(Integer value) {
            addCriterion("style_sum <>", value, "styleSum");
            return (Criteria) this;
        }

        public Criteria andStyleSumGreaterThan(Integer value) {
            addCriterion("style_sum >", value, "styleSum");
            return (Criteria) this;
        }

        public Criteria andStyleSumGreaterThanOrEqualTo(Integer value) {
            addCriterion("style_sum >=", value, "styleSum");
            return (Criteria) this;
        }

        public Criteria andStyleSumLessThan(Integer value) {
            addCriterion("style_sum <", value, "styleSum");
            return (Criteria) this;
        }

        public Criteria andStyleSumLessThanOrEqualTo(Integer value) {
            addCriterion("style_sum <=", value, "styleSum");
            return (Criteria) this;
        }

        public Criteria andStyleSumIn(List<Integer> values) {
            addCriterion("style_sum in", values, "styleSum");
            return (Criteria) this;
        }

        public Criteria andStyleSumNotIn(List<Integer> values) {
            addCriterion("style_sum not in", values, "styleSum");
            return (Criteria) this;
        }

        public Criteria andStyleSumBetween(Integer value1, Integer value2) {
            addCriterion("style_sum between", value1, value2, "styleSum");
            return (Criteria) this;
        }

        public Criteria andStyleSumNotBetween(Integer value1, Integer value2) {
            addCriterion("style_sum not between", value1, value2, "styleSum");
            return (Criteria) this;
        }

        public Criteria andIsPetsIsNull() {
            addCriterion("is_pets is null");
            return (Criteria) this;
        }

        public Criteria andIsPetsIsNotNull() {
            addCriterion("is_pets is not null");
            return (Criteria) this;
        }

        public Criteria andIsPetsEqualTo(Byte value) {
            addCriterion("is_pets =", value, "isPets");
            return (Criteria) this;
        }

        public Criteria andIsPetsNotEqualTo(Byte value) {
            addCriterion("is_pets <>", value, "isPets");
            return (Criteria) this;
        }

        public Criteria andIsPetsGreaterThan(Byte value) {
            addCriterion("is_pets >", value, "isPets");
            return (Criteria) this;
        }

        public Criteria andIsPetsGreaterThanOrEqualTo(Byte value) {
            addCriterion("is_pets >=", value, "isPets");
            return (Criteria) this;
        }

        public Criteria andIsPetsLessThan(Byte value) {
            addCriterion("is_pets <", value, "isPets");
            return (Criteria) this;
        }

        public Criteria andIsPetsLessThanOrEqualTo(Byte value) {
            addCriterion("is_pets <=", value, "isPets");
            return (Criteria) this;
        }

        public Criteria andIsPetsIn(List<Byte> values) {
            addCriterion("is_pets in", values, "isPets");
            return (Criteria) this;
        }

        public Criteria andIsPetsNotIn(List<Byte> values) {
            addCriterion("is_pets not in", values, "isPets");
            return (Criteria) this;
        }

        public Criteria andIsPetsBetween(Byte value1, Byte value2) {
            addCriterion("is_pets between", value1, value2, "isPets");
            return (Criteria) this;
        }

        public Criteria andIsPetsNotBetween(Byte value1, Byte value2) {
            addCriterion("is_pets not between", value1, value2, "isPets");
            return (Criteria) this;
        }

        public Criteria andIsConstellationIsNull() {
            addCriterion("is_constellation is null");
            return (Criteria) this;
        }

        public Criteria andIsConstellationIsNotNull() {
            addCriterion("is_constellation is not null");
            return (Criteria) this;
        }

        public Criteria andIsConstellationEqualTo(Byte value) {
            addCriterion("is_constellation =", value, "isConstellation");
            return (Criteria) this;
        }

        public Criteria andIsConstellationNotEqualTo(Byte value) {
            addCriterion("is_constellation <>", value, "isConstellation");
            return (Criteria) this;
        }

        public Criteria andIsConstellationGreaterThan(Byte value) {
            addCriterion("is_constellation >", value, "isConstellation");
            return (Criteria) this;
        }

        public Criteria andIsConstellationGreaterThanOrEqualTo(Byte value) {
            addCriterion("is_constellation >=", value, "isConstellation");
            return (Criteria) this;
        }

        public Criteria andIsConstellationLessThan(Byte value) {
            addCriterion("is_constellation <", value, "isConstellation");
            return (Criteria) this;
        }

        public Criteria andIsConstellationLessThanOrEqualTo(Byte value) {
            addCriterion("is_constellation <=", value, "isConstellation");
            return (Criteria) this;
        }

        public Criteria andIsConstellationIn(List<Byte> values) {
            addCriterion("is_constellation in", values, "isConstellation");
            return (Criteria) this;
        }

        public Criteria andIsConstellationNotIn(List<Byte> values) {
            addCriterion("is_constellation not in", values, "isConstellation");
            return (Criteria) this;
        }

        public Criteria andIsConstellationBetween(Byte value1, Byte value2) {
            addCriterion("is_constellation between", value1, value2, "isConstellation");
            return (Criteria) this;
        }

        public Criteria andIsConstellationNotBetween(Byte value1, Byte value2) {
            addCriterion("is_constellation not between", value1, value2, "isConstellation");
            return (Criteria) this;
        }

        public Criteria andIsSportsIsNull() {
            addCriterion("is_sports is null");
            return (Criteria) this;
        }

        public Criteria andIsSportsIsNotNull() {
            addCriterion("is_sports is not null");
            return (Criteria) this;
        }

        public Criteria andIsSportsEqualTo(Byte value) {
            addCriterion("is_sports =", value, "isSports");
            return (Criteria) this;
        }

        public Criteria andIsSportsNotEqualTo(Byte value) {
            addCriterion("is_sports <>", value, "isSports");
            return (Criteria) this;
        }

        public Criteria andIsSportsGreaterThan(Byte value) {
            addCriterion("is_sports >", value, "isSports");
            return (Criteria) this;
        }

        public Criteria andIsSportsGreaterThanOrEqualTo(Byte value) {
            addCriterion("is_sports >=", value, "isSports");
            return (Criteria) this;
        }

        public Criteria andIsSportsLessThan(Byte value) {
            addCriterion("is_sports <", value, "isSports");
            return (Criteria) this;
        }

        public Criteria andIsSportsLessThanOrEqualTo(Byte value) {
            addCriterion("is_sports <=", value, "isSports");
            return (Criteria) this;
        }

        public Criteria andIsSportsIn(List<Byte> values) {
            addCriterion("is_sports in", values, "isSports");
            return (Criteria) this;
        }

        public Criteria andIsSportsNotIn(List<Byte> values) {
            addCriterion("is_sports not in", values, "isSports");
            return (Criteria) this;
        }

        public Criteria andIsSportsBetween(Byte value1, Byte value2) {
            addCriterion("is_sports between", value1, value2, "isSports");
            return (Criteria) this;
        }

        public Criteria andIsSportsNotBetween(Byte value1, Byte value2) {
            addCriterion("is_sports not between", value1, value2, "isSports");
            return (Criteria) this;
        }

        public Criteria andIsChessIsNull() {
            addCriterion("is_chess is null");
            return (Criteria) this;
        }

        public Criteria andIsChessIsNotNull() {
            addCriterion("is_chess is not null");
            return (Criteria) this;
        }

        public Criteria andIsChessEqualTo(Byte value) {
            addCriterion("is_chess =", value, "isChess");
            return (Criteria) this;
        }

        public Criteria andIsChessNotEqualTo(Byte value) {
            addCriterion("is_chess <>", value, "isChess");
            return (Criteria) this;
        }

        public Criteria andIsChessGreaterThan(Byte value) {
            addCriterion("is_chess >", value, "isChess");
            return (Criteria) this;
        }

        public Criteria andIsChessGreaterThanOrEqualTo(Byte value) {
            addCriterion("is_chess >=", value, "isChess");
            return (Criteria) this;
        }

        public Criteria andIsChessLessThan(Byte value) {
            addCriterion("is_chess <", value, "isChess");
            return (Criteria) this;
        }

        public Criteria andIsChessLessThanOrEqualTo(Byte value) {
            addCriterion("is_chess <=", value, "isChess");
            return (Criteria) this;
        }

        public Criteria andIsChessIn(List<Byte> values) {
            addCriterion("is_chess in", values, "isChess");
            return (Criteria) this;
        }

        public Criteria andIsChessNotIn(List<Byte> values) {
            addCriterion("is_chess not in", values, "isChess");
            return (Criteria) this;
        }

        public Criteria andIsChessBetween(Byte value1, Byte value2) {
            addCriterion("is_chess between", value1, value2, "isChess");
            return (Criteria) this;
        }

        public Criteria andIsChessNotBetween(Byte value1, Byte value2) {
            addCriterion("is_chess not between", value1, value2, "isChess");
            return (Criteria) this;
        }

        public Criteria andIsTourIsNull() {
            addCriterion("is_tour is null");
            return (Criteria) this;
        }

        public Criteria andIsTourIsNotNull() {
            addCriterion("is_tour is not null");
            return (Criteria) this;
        }

        public Criteria andIsTourEqualTo(Byte value) {
            addCriterion("is_tour =", value, "isTour");
            return (Criteria) this;
        }

        public Criteria andIsTourNotEqualTo(Byte value) {
            addCriterion("is_tour <>", value, "isTour");
            return (Criteria) this;
        }

        public Criteria andIsTourGreaterThan(Byte value) {
            addCriterion("is_tour >", value, "isTour");
            return (Criteria) this;
        }

        public Criteria andIsTourGreaterThanOrEqualTo(Byte value) {
            addCriterion("is_tour >=", value, "isTour");
            return (Criteria) this;
        }

        public Criteria andIsTourLessThan(Byte value) {
            addCriterion("is_tour <", value, "isTour");
            return (Criteria) this;
        }

        public Criteria andIsTourLessThanOrEqualTo(Byte value) {
            addCriterion("is_tour <=", value, "isTour");
            return (Criteria) this;
        }

        public Criteria andIsTourIn(List<Byte> values) {
            addCriterion("is_tour in", values, "isTour");
            return (Criteria) this;
        }

        public Criteria andIsTourNotIn(List<Byte> values) {
            addCriterion("is_tour not in", values, "isTour");
            return (Criteria) this;
        }

        public Criteria andIsTourBetween(Byte value1, Byte value2) {
            addCriterion("is_tour between", value1, value2, "isTour");
            return (Criteria) this;
        }

        public Criteria andIsTourNotBetween(Byte value1, Byte value2) {
            addCriterion("is_tour not between", value1, value2, "isTour");
            return (Criteria) this;
        }

        public Criteria andIsMusicalIsNull() {
            addCriterion("is_musical is null");
            return (Criteria) this;
        }

        public Criteria andIsMusicalIsNotNull() {
            addCriterion("is_musical is not null");
            return (Criteria) this;
        }

        public Criteria andIsMusicalEqualTo(Byte value) {
            addCriterion("is_musical =", value, "isMusical");
            return (Criteria) this;
        }

        public Criteria andIsMusicalNotEqualTo(Byte value) {
            addCriterion("is_musical <>", value, "isMusical");
            return (Criteria) this;
        }

        public Criteria andIsMusicalGreaterThan(Byte value) {
            addCriterion("is_musical >", value, "isMusical");
            return (Criteria) this;
        }

        public Criteria andIsMusicalGreaterThanOrEqualTo(Byte value) {
            addCriterion("is_musical >=", value, "isMusical");
            return (Criteria) this;
        }

        public Criteria andIsMusicalLessThan(Byte value) {
            addCriterion("is_musical <", value, "isMusical");
            return (Criteria) this;
        }

        public Criteria andIsMusicalLessThanOrEqualTo(Byte value) {
            addCriterion("is_musical <=", value, "isMusical");
            return (Criteria) this;
        }

        public Criteria andIsMusicalIn(List<Byte> values) {
            addCriterion("is_musical in", values, "isMusical");
            return (Criteria) this;
        }

        public Criteria andIsMusicalNotIn(List<Byte> values) {
            addCriterion("is_musical not in", values, "isMusical");
            return (Criteria) this;
        }

        public Criteria andIsMusicalBetween(Byte value1, Byte value2) {
            addCriterion("is_musical between", value1, value2, "isMusical");
            return (Criteria) this;
        }

        public Criteria andIsMusicalNotBetween(Byte value1, Byte value2) {
            addCriterion("is_musical not between", value1, value2, "isMusical");
            return (Criteria) this;
        }

        public Criteria andIsDanceIsNull() {
            addCriterion("is_dance is null");
            return (Criteria) this;
        }

        public Criteria andIsDanceIsNotNull() {
            addCriterion("is_dance is not null");
            return (Criteria) this;
        }

        public Criteria andIsDanceEqualTo(Byte value) {
            addCriterion("is_dance =", value, "isDance");
            return (Criteria) this;
        }

        public Criteria andIsDanceNotEqualTo(Byte value) {
            addCriterion("is_dance <>", value, "isDance");
            return (Criteria) this;
        }

        public Criteria andIsDanceGreaterThan(Byte value) {
            addCriterion("is_dance >", value, "isDance");
            return (Criteria) this;
        }

        public Criteria andIsDanceGreaterThanOrEqualTo(Byte value) {
            addCriterion("is_dance >=", value, "isDance");
            return (Criteria) this;
        }

        public Criteria andIsDanceLessThan(Byte value) {
            addCriterion("is_dance <", value, "isDance");
            return (Criteria) this;
        }

        public Criteria andIsDanceLessThanOrEqualTo(Byte value) {
            addCriterion("is_dance <=", value, "isDance");
            return (Criteria) this;
        }

        public Criteria andIsDanceIn(List<Byte> values) {
            addCriterion("is_dance in", values, "isDance");
            return (Criteria) this;
        }

        public Criteria andIsDanceNotIn(List<Byte> values) {
            addCriterion("is_dance not in", values, "isDance");
            return (Criteria) this;
        }

        public Criteria andIsDanceBetween(Byte value1, Byte value2) {
            addCriterion("is_dance between", value1, value2, "isDance");
            return (Criteria) this;
        }

        public Criteria andIsDanceNotBetween(Byte value1, Byte value2) {
            addCriterion("is_dance not between", value1, value2, "isDance");
            return (Criteria) this;
        }

        public Criteria andIsFilmIsNull() {
            addCriterion("is_film is null");
            return (Criteria) this;
        }

        public Criteria andIsFilmIsNotNull() {
            addCriterion("is_film is not null");
            return (Criteria) this;
        }

        public Criteria andIsFilmEqualTo(Byte value) {
            addCriterion("is_film =", value, "isFilm");
            return (Criteria) this;
        }

        public Criteria andIsFilmNotEqualTo(Byte value) {
            addCriterion("is_film <>", value, "isFilm");
            return (Criteria) this;
        }

        public Criteria andIsFilmGreaterThan(Byte value) {
            addCriterion("is_film >", value, "isFilm");
            return (Criteria) this;
        }

        public Criteria andIsFilmGreaterThanOrEqualTo(Byte value) {
            addCriterion("is_film >=", value, "isFilm");
            return (Criteria) this;
        }

        public Criteria andIsFilmLessThan(Byte value) {
            addCriterion("is_film <", value, "isFilm");
            return (Criteria) this;
        }

        public Criteria andIsFilmLessThanOrEqualTo(Byte value) {
            addCriterion("is_film <=", value, "isFilm");
            return (Criteria) this;
        }

        public Criteria andIsFilmIn(List<Byte> values) {
            addCriterion("is_film in", values, "isFilm");
            return (Criteria) this;
        }

        public Criteria andIsFilmNotIn(List<Byte> values) {
            addCriterion("is_film not in", values, "isFilm");
            return (Criteria) this;
        }

        public Criteria andIsFilmBetween(Byte value1, Byte value2) {
            addCriterion("is_film between", value1, value2, "isFilm");
            return (Criteria) this;
        }

        public Criteria andIsFilmNotBetween(Byte value1, Byte value2) {
            addCriterion("is_film not between", value1, value2, "isFilm");
            return (Criteria) this;
        }

        public Criteria andIsReadIsNull() {
            addCriterion("is_read is null");
            return (Criteria) this;
        }

        public Criteria andIsReadIsNotNull() {
            addCriterion("is_read is not null");
            return (Criteria) this;
        }

        public Criteria andIsReadEqualTo(Byte value) {
            addCriterion("is_read =", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadNotEqualTo(Byte value) {
            addCriterion("is_read <>", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadGreaterThan(Byte value) {
            addCriterion("is_read >", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadGreaterThanOrEqualTo(Byte value) {
            addCriterion("is_read >=", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadLessThan(Byte value) {
            addCriterion("is_read <", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadLessThanOrEqualTo(Byte value) {
            addCriterion("is_read <=", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadIn(List<Byte> values) {
            addCriterion("is_read in", values, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadNotIn(List<Byte> values) {
            addCriterion("is_read not in", values, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadBetween(Byte value1, Byte value2) {
            addCriterion("is_read between", value1, value2, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadNotBetween(Byte value1, Byte value2) {
            addCriterion("is_read not between", value1, value2, "isRead");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterion("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterion("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterion("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterion("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterion("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterion("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterion("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterion("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterion("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterion("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterion("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterion("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterion("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterion("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterion("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterion("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_style
     *
     * @mbg.generated do_not_delete_during_merge Fri Oct 04 08:56:50 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_style
     *
     * @mbg.generated Fri Oct 04 08:56:50 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}